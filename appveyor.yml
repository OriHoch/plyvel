# environment:
#   TWINE_USERNAME: 
#   # The encrypted password, used for deploying.
#   TWINE_PASSWORD: 
#     secure: 
 
#   matrix:
 
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
 
#     - PYTHON: "C:\\Python27"
#       PYTHON_VERSION: "2.7.x"
#       PYTHON_ARCH: "32"
 
#     - PYTHON: "C:\\Python27-x64"
#       PYTHON_VERSION: "2.7.x"
#       PYTHON_ARCH: "64"
 
#     - PYTHON: "C:\\Python34"
#       PYTHON_VERSION: "3.4.x"
#       PYTHON_ARCH: "32"
 
#     - PYTHON: "C:\\Python34-x64"
#       PYTHON_VERSION: "3.4.x"
#       PYTHON_ARCH: "64"
 
#     - PYTHON: "C:\\Python35"
#       PYTHON_VERSION: "3.5.x"
#       PYTHON_ARCH: "32"
 
#     - PYTHON: "C:\\Python35-x64"
#       PYTHON_VERSION: "3.5.x"
#       PYTHON_ARCH: "64"
 
#     - PYTHON: "C:\\Python36"
#       PYTHON_VERSION: "3.6.x"
#       PYTHON_ARCH: "32"
 
#     - PYTHON: "C:\\Python36-x64"
#       PYTHON_VERSION: "3.6.x"
#       PYTHON_ARCH: "64"

#     - PYTHON: "C:\\Python37"
#       PYTHON_VERSION: "3.7.x"
#       PYTHON_ARCH: "32"
 
#     - PYTHON: "C:\\Python37-x64"
#       PYTHON_VERSION: "3.7.x"
#       PYTHON_ARCH: "64"

 
# init:
#   - "ECHO Python %PYTHON_VERSION% (%PYTHON_ARCH%bit) from %PYTHON%"
 
install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""
 
  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
 
  - set PATH=C:\Miniconda37-x64;C:\Miniconda37-x64\Scripts;%PATH%
  - "python --version"
  
  - "conda install -y leveldb"
 
  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "C:\\Miniconda37-x64\\python.exe -m pip install --disable-pip-version-check --user --upgrade pip"
 
  # Install twine, support for 'bdist_wheel' and update setuptools.
  - "C:\\Miniconda37-x64\\python.exe -m pip  install --upgrade wheel setuptools twine pytest"

  - "C:\\Miniconda37-x64\\python.exe -m pip  install -r requirements-dev.txt"
 
build_script:
  - "cython --cplus --fast-fail --annotate plyvel/_plyvel.pyx"
  - "C:\\Miniconda37-x64\\python.exe setup.py install"
 
test_script:
  # Build the compiled extension and run the project tests
  - "pytest"
 
after_test:
  # If tests are successful, create binary packages for the project.
  - "python setup.py bdist_wheel"
  - ps: "ls dist"
 
artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*.whl
 
# on_success:
  # If this is a new release (a new tag), upload to PyPi
#   - if "%APPVEYOR_REPO_TAG%"=="true" ( twine upload dist\*.whl ) 
